{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAMA,MAAMC,EAAO,CACXC,YAAaC,SAASC,cAAc,gBACpCC,mBAAoBF,SAASC,cAAc,6BAC3CE,iBAAkBH,SAASC,cAAc,yBACzCG,eAAgBJ,SAASC,cAAc,YACvCI,mBAAoBL,SAASC,cAAc,oBAC3CK,gBAAiBN,SAASC,cAAc,cAIpCM,EAAU,IAAIC,EAAAZ,GAAJ,CAAmB,cAG7Ba,EAAa,IAAI,EAAAC,EAAAC,SAGjBC,EAAW,IAAIC,sBAyDrB,SAA4BC,EAASC,GACnCD,EAAQE,SAAQC,IACVA,EAAMC,gBAERC,EAAe,KAAMV,EAAWW,KAAO,EAAE,G,GA7De,CAC5DC,WAAY,QACZC,UAAW,IAQbC,eAAeJ,EAAeK,EAAOJ,GAEnC,IAEE,MAAMK,QAAehB,EAAWiB,YAAYF,EAAOJ,GAoBnD,GAlBa,IAATA,IAEFO,EAAAC,OAAOC,QAAQ,oBAAoBpB,EAAWqB,iBAG9ClB,EAASmB,QAAQjC,EAAKO,qBAIxBP,EAAKM,eAAe4B,mBAClB,YACAP,EAAOQ,IAAIC,EAAAvB,SAAmBwB,KAAK,KAIrC5B,EAAQ6B,UAGJ3B,EAAWW,MAAQX,EAAW4B,SAChC,MAAM,IAAIC,MACR,6D,CAGJ,MAAOC,GAEPZ,EAAAC,OAAOY,QAAQD,EAAME,SAGrB7B,EAAS8B,UAAU5C,EAAKO,mB,EA2B5BP,EAAKC,YAAY4C,iBAAiB,UAElC,SAAsBC,GAEpBA,EAAMC,iBApBN/C,EAAKM,eAAe0C,UAAY,GA0BhClC,EAAS8B,UAAU5C,EAAKO,oBAGxBc,EAAeyB,EAAMG,OAAOC,SAASC,YAAYC,MAAO,E","sources":["src/js/index-scroll.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PixabayApi from './pixabay-api.js';\nimport photoCardTemplate from './photo-card-template.js';\n\nconst refs = {\n  formElement: document.querySelector('#search-form'),\n  searchQueryElement: document.querySelector('input[name=\"searchQuery\"]'),\n  submitBtnElement: document.querySelector('button[type=\"submit\"]'),\n  galleryElement: document.querySelector('.gallery'),\n  loadMoreBtnElement: document.querySelector('button.load-more'),\n  backdropElement: document.querySelector('.backdrop'),\n};\n\n// Initialize SimpleLightbox\nconst gallery = new SimpleLightbox('.gallery a');\n\n// Create new object to handle all requests\nconst pixabayApi = new PixabayApi();\n\n// Create observer\nconst observer = new IntersectionObserver(observeLoadMoreBtn, {\n  rootMargin: '200px',\n  threshold: 1.0,\n});\n\n/**\n  |============================\n  | Function to Process Request\n  |============================\n*/\nasync function processRequest(query, page) {\n  // Send request to a server\n  try {\n    // Fetch Photos from a server\n    const photos = await pixabayApi.fetchPhotos(query, page);\n\n    if (page === 1) {\n      // Display Total Found message only when we are on the first page\n      Notify.success(`Hooray! We found ${pixabayApi.total} images.`);\n\n      // Add observer if Scroll Mode enabled\n      observer.observe(refs.loadMoreBtnElement);\n    }\n\n    // Insert new Images to the content\n    refs.galleryElement.insertAdjacentHTML(\n      'beforeend',\n      photos.map(photoCardTemplate).join('')\n    );\n\n    // Reinitilize the lightbox\n    gallery.refresh();\n\n    // If we have reached the last page, then show message and remove observer\n    if (pixabayApi.page >= pixabayApi.lastPage) {\n      throw new Error(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n    }\n  } catch (error) {\n    // Show Error message\n    Notify.failure(error.message);\n\n    // Remove observer\n    observer.unobserve(refs.loadMoreBtnElement);\n  }\n}\n\n/**\n  |============================\n  | UI unil functions\n  |============================\n*/\n// Function to clear content\nfunction clearContent() {\n  refs.galleryElement.innerHTML = '';\n}\nfunction observeLoadMoreBtn(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      // Send request to the server and render HTML\n      processRequest(null, pixabayApi.page + 1);\n    }\n  });\n}\n\n/**\n  |============================\n  | Add Event Listener for Form submit event\n  |============================\n*/\nrefs.formElement.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  // Prevent default form submit action\n  event.preventDefault();\n\n  // Clear content\n  clearContent();\n\n  // Remove observer\n  observer.unobserve(refs.loadMoreBtnElement);\n\n  // Send request to the server and render HTML\n  processRequest(event.target.elements.searchQuery.value, 1);\n}\n"],"names":["$fZKcF","parcelRequire","$acc4b6e2906b6e8c$var$refs","formElement","document","querySelector","searchQueryElement","submitBtnElement","galleryElement","loadMoreBtnElement","backdropElement","$acc4b6e2906b6e8c$var$gallery","$parcel$interopDefault","$acc4b6e2906b6e8c$var$pixabayApi","$6fOXY","default","$acc4b6e2906b6e8c$var$observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","$acc4b6e2906b6e8c$var$processRequest","page","rootMargin","threshold","async","query","photos","fetchPhotos","$iQIUW","Notify","success","total","observe","insertAdjacentHTML","map","$FJc4W","join","refresh","lastPage","Error","error","failure","message","unobserve","addEventListener","event","preventDefault","innerHTML","target","elements","searchQuery","value"],"version":3,"file":"index-scroll.4c55987e.js.map"}